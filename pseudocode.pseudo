Global variables, object:
    1. Createv variable, for location name String, locationName;
    2. Create variable, for location - Object, locationObj;
    3. Create variable, for saved locations - Array, savedLocations;
    4. Create variable, for theme - String, theme;
    5. Create variable, for temperature unit - String, tempUnit;
    6. Create variable, for severe weather check - Boolean, severeWeather = false;

Get location information from weather api:
    useEffect(()=>{
        fetch(link);
        then(res => {
            setLocationObj(res)
        },[locationName])
    })

Functions:
    1. Function changeLocation(inputs: name):
        1. Set locationName to name;

    2. Function handleSearchLocation(inputs: name):
        1. changeLocation(name);
    
    3. Function changeTheme(inputs: themeName):
        1. Set theme to themeName;
        
    4. Function changeDisplayUnit(inputs: unit):
        1. Set tempUnit to unit;

    5. Function weatherAlert(inputs: locationName):
        1. IF severe weather conditions:
            1. Set severeWeather to true;
    
    6. Function handleSaveLocation(inputs: locationName):
        1. Push locationName to savedLocations;

Components:
    1. DayCard(props: day, icon, temperature)
        1. Create div to hold all prop information;

    2. HighlightCard(props: title, info_one, info_two)
        1. Create div to hold all prop information;

    3. LocationInfoCard(inputs: locationObj)
        1. Create divs to hold location information;

    4. SearchLocation(inputs: handleSearchLocation, name)
        1. Create search bar and button to allow search;
        2. use handleSearchLocation to change locationName;

    5. HeadingCards(props: title)
        1. Create divs to hold tile;
    
    6. Sidebar(inputs: HeadingCards)
        1. Render HeadingCards;

    7. Main(props: locationObj)
        1. Render HighlightCard, LocationInfoCard, SearchLocation;
    
    8. SavedLocationCard(props: savedLocations) 
        1. Create divs from savedLocations;
        2. Create function to handle location change;

